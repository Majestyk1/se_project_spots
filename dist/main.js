!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn_type_disabled",inputErrorClass:"modal__input_type_error"},t=(e,t,r)=>{e.querySelector(`#${t.id}-error`).textContent="",t.classList.remove(r.inputErrorClass)},r=(e,t,r)=>{(e=>e.some((e=>!e.validity.valid)))(e)?n(t,r):(t.disabled=!1,t.classList.remove(r.inactiveButtonClass))},n=(e,t)=>{e.disabled=!0,e.classList.add(t.inactiveButtonClass)};function a(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Save",n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"Saving...";e.textContent=t?`${n}`:`${r}`}const o=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._checkResponse)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then((e=>this._checkResponse(e)))}addNewCard(e){let{name:t,link:r}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})}).then(this._checkResponse)}editUserInfo(e){let{name:t,about:r}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})}).then(this._checkResponse)}editAvatarInfo(e){let{avatar:t}=e;return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then(this._checkResponse)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}handleLikeStatus(e,t){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:t?"DELETE":"PUT",headers:this._headers}).then(this._checkResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"f5f37795-460a-4027-8d2b-61c9933d5033","Content-Type":"application/json"}});o.getAppInfo().then((e=>{let[t,r]=e;t.forEach((e=>{j(e)})),i.src=r.avatar,d.textContent=r.name,c.textContent=r.about})).catch((e=>{console.error(e)}));const s=document.querySelector("#card-template"),l=document.querySelector(".cards__list"),d=document.querySelector(".profile__name"),c=document.querySelector(".profile__description"),i=document.querySelector(".profile__avatar"),u=document.querySelector("#avatar-modal"),m=document.forms["edit-avatar-profile"],h=u.querySelector("#profile-avatar-input"),_=document.querySelector("#delete-modal"),v=_.querySelector(".modal__form_delete"),p=document.querySelector(".profile__avatar-btn"),f=document.querySelector(".profile__edit-btn"),y=document.querySelector(".profile__add-btn"),S=document.querySelectorAll(".modal__close-btn"),b=document.querySelector(".modal__button"),k=document.querySelector("#edit-modal"),q=document.forms["edit-profile"],E=k.querySelector("#profile-name-input"),L=k.querySelector("#profile-description-input"),C=document.querySelector("#add-card-modal"),g=document.forms["add-card-form"],U=C.querySelector(".modal__submit-btn"),$=C.querySelector("#add-card-name-input"),x=C.querySelector("#add-card-link-input"),A=document.querySelector("#preview-modal"),D=A.querySelector(".modal__image"),I=A.querySelector(".modal__caption"),w="modal_opened";let R,T;const N=e=>{"Escape"===e.key&&O()},P=e=>{e.target===e.currentTarget&&O()},B=e=>{e.classList.add(w),e.addEventListener("mousedown",P),document.addEventListener("keydown",N)},O=()=>{const e=document.querySelector(`.${w}`);e.classList.remove(w),e.removeEventListener("mousedown",P),document.removeEventListener("keydown",N)},j=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"prepend";const r=(e=>{const t=s.content.querySelector(".card").cloneNode(!0),r=t.querySelector(".card__title"),n=t.querySelector(".card__image"),a=t.querySelector(".card__like-btn"),l=t.querySelector(".card__delete-btn");let d=e.isLiked;d&&a.classList.add("card__like-btn_liked"),r.textContent=e.name,n.src=e.link,n.alt=e.name,a.addEventListener("click",(t=>{c(t,e._id)})),l.addEventListener("click",(()=>((e,t)=>{R=e,T=t,B(_)})(t,e._id))),n.addEventListener("click",(()=>{D.src=e.link,I.textContent=e.name,D.alt=e.name,B(A)}));const c=()=>{o.handleLikeStatus(e._id,d).then((()=>{a.classList.toggle("card__like-btn_liked"),d=!d})).catch((e=>{console.error(e),alert("Could not like card")}))};return t})(e);l[t](r)};var J;f.addEventListener("click",(()=>{var r,n;E.value=d.textContent,L.value=c.textContent,r=q,n=e,[E,L].forEach((e=>{t(r,e,n)})),B(k)})),y.addEventListener("click",(()=>{B(C)})),b.addEventListener("click",(()=>{O()})),S.forEach((e=>{e.addEventListener("click",(()=>{O()}))})),p.addEventListener("click",(()=>{B(u)})),q.addEventListener("submit",(e=>{e.preventDefault();const t=e.submitter;a(t,!0),o.editUserInfo({name:E.value,about:L.value}).then((e=>{d.textContent=e.name,c.textContent=e.about,O()})).catch((e=>{console.error(e)})).finally((()=>{a(t,!1)}))})),g.addEventListener("submit",(t=>{t.preventDefault();const r=t.submitter;a(r,!0);const s={name:$.value,link:x.value};o.addNewCard(s).then((r=>{j(r),t.target.reset(),n(U,e),O()})).catch((e=>{console.error(e),alert("Could not add new card")})).finally((()=>{a(r,!1)}))})),m.addEventListener("submit",(e=>{e.preventDefault();const t=e.submitter;a(t,!0),o.editAvatarInfo({avatar:h.value}).then((e=>{i.src=e.avatar,O()})).catch((e=>{console.error(e)})).finally((()=>{a(t,!1)}))})),v.addEventListener("submit",(e=>{e.preventDefault();const t=e.submitter;a(t,!0,"Delete","Deleting..."),o.deleteCard(T).then((()=>{R&&R.remove(),O()})).catch((e=>{console.error(e)})).finally((()=>{a(t,!1,"Delete","Deleting...")}))})),J=e,document.querySelectorAll(J.formSelector).forEach((e=>{((e,n)=>{const a=Array.from(e.querySelectorAll(n.inputSelector)),o=e.querySelector(n.submitButtonSelector);r(a,o,n),a.forEach((s=>{s.addEventListener("input",(()=>{((e,r,n)=>{r.validity.valid?t(e,r,n):((e,t,r,n)=>{e.querySelector(`#${t.id}-error`).textContent=r,t.classList.add(n.inputErrorClass)})(e,r,r.validationMessage,n)})(e,s,n),r(a,o,n)}))}))})(e,J)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,